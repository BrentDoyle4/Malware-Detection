import os
import subprocess
from flask import *
from werkzeug.utils import secure_filename
import shutil
import glob

UPLOAD_FOLDER = 'uploads'
ALLOWED_EXTENSIONS = {'csv'}

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
'''
def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS
'''

def clear_upload_folder():
    folder = app.config['UPLOAD_FOLDER']
    for filename in os.listdir(folder):
        file_path = os.path.join(folder, filename)
        try:
            if os.path.isfile(file_path) or os.path.islink(file_path):
                os.unlink(file_path)  # Remove file or symbolic link
            elif os.path.isdir(file_path):
                shutil.rmtree(file_path)  # Remove directory and all its contents
        except Exception as e:
            print(f'Failed to delete {file_path}. Reason: {e}')

@app.route('/')
def index():
    return render_template("index.html")

@app.route('/uploadfileprocmon', methods=['POST'])
def uploadfileprocmon():
    if 'procmonfile' not in request.files:
        return redirect(request.url)
    file = request.files['procmonfile']
    if file.filename == '':
        return redirect(request.url)
    
    if file:
        filename = file.filename
        file.save('uploads/procmon' + filename)
    return redirect(url_for('index'))

@app.route('/uploadfilewireshark', methods=['POST'])
def uploadfilewireshark():
    if 'wiresharkfile' not in request.files:
        return redirect(request.url)
    file = request.files['wiresharkfile']
    if file.filename == '':
        return redirect(request.url)
    
    if file:
        filename = file.filename
        file.save('uploads/wireshark' + filename)
    return redirect(url_for('index'))


'''
@app.route('/upload', methods=['GET', 'POST'])
def upload_file():
    arr_file = []
    if request.method == 'POST':
        if 'wiresharkfile' not in request.files or 'procmonfile' not in request.files:
            flash("sorry, not all data sent")
            return redirect(request.url)
        wiresharkfile = request.file["wiresharkfile"]
        procmonfile = request.file["procmonfile"]

        if wiresharkfile.filename == "" or procmonfile.filename == "":
            flash("two files needed")
            return redirect(request.url)
        
        if wiresharkfile and procmonfile:
            wiresharkfiles.save('uploads/wireshark' + wiresharkfiles.filename)
            procmonfile.save('uploads/wireshark' + wiresharkfiles.filename)

        procmonfiles = request.files('procmonfile') 
        wiresharkfiles = request.files('wiresharkfile') 
        clear_upload_folder()
        wiresharkfiles.save('uploads/wireshark' + wiresharkfiles.filename)
        procmonfiles.save('uploads/procmon' + procmonfiles.filename) 
        # Iterate for each file in the files List, and Save them 

        for file in files: 
            file.save('uploads/' + file.filename) 
            f = open('test.py', 'w')
            f.write("x")
            f.write(str(file.filename))
            f.close()

        return "<h1>Files Uploaded Successfully.!</h1>"
        

        #for file in files:

            file.save(file.filename)
            files = request.files.getlist("file")
            f = open('test.py', 'w')
            f.write(str(files))
            f.close()
            if 'file' not in request.files:
                return redirect(request.url)
            file = request.files['file']
            if file.filename == '':
                return redirect(request.url)
            if file:
                filename = secure_filename(file.filename)
                filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename)
                file.save(filepath)
                arr_file.append(filename)
                f = open('test.py', 'w')
                f.write(str(filename))
                f.close()

'''        
   # return arr_file

@app.route('/logfiles')
def logfiles():
    return render_template("logfiles.html")

if __name__ == "__main__":
    if not os.path.exists(UPLOAD_FOLDER):
        os.makedirs(UPLOAD_FOLDER)
    app.run(debug=True)
